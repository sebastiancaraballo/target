FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Target

Target project.

## Users Collection [/api/v1/users]
For GENDER attribute, possible values are: __'male'__, __'female'__ and __'other'__

### Sign Up [POST]

+ Request (application/json)
    + Attributes
      + user (User Edition, required)

+ Response 200 (application/json)
    + Headers

            access-token: -abG_2b-LZMm_mJxz6dlGg
            client: SOn5zDcJF_pkmGvTF_5eMQ
            expiry: 1601058505
            uid: test@test.com

    + Attributes
      + user (User Response, required)

+ Response 422

## Update current user profile [/api/v1/users/{id}]

### Update current user profile [PUT]

+ Request (application/json)
    + Headers

            access-token: sO2bm_Bpdyoo8r78jZ-fqg
            client: QADgNCWRJj0LyRruqzYbBg
            uid: test@test.com

    + Attributes
      + user (User Update Edition, required)

+ Response 200 (application/json)
    + Headers

            access-token: sO2bm_Bpdyoo8r78jZ-fqg
            client: QADgNCWRJj0LyRruqzYbBg
            expiry: 1489009792
            uid: testing@test.com

    + Attributes
      + user (User Response, required)

## Get user's profile [/api/v1/users/{id}]

### Get user [GET]

+ Request (application/json)
    + Parameters
        + id (integer, required)

    + Headers

            access-token: sO2bm_Bpdyoo8r78jZ-fqg
            client: QADgNCWRJj0LyRruqzYbBg
            uid: test@test.com


+ Response 200 (application/json)
    + Headers

            access-token: sO2bm_Bpdyoo8r78jZ-fqg
            client: QADgNCWRJj0LyRruqzYbBg
            expiry: 1489009792
            uid: test@test.com


    + Attributes
      + user (User Response, required)

+ Response 401

## Log In [/api/v1/users/sign_in]

### Log In [POST]

+ Request (application/json)

    + Body

            {
              "user":
                {
                  "email": "test@test.com",
                  "password": "password"
                }
            }


+ Response 200 (application/json)
    + Headers

            access-token: sO2bm_Bpdyoo8r78jZ-fqg
            client: QADgNCWRJj0LyRruqzYbBg
            expiry: 1489009792
            uid: test@test.com

    + Attributes
      + user (User Response, required)

+ Response 401

## Facebook Log In [/api/v1/users/facebook]

### Facebook Log In [POST]

+ Response 200 (application/json)
    + Headers

            access-token: sO2bm_Bpdyoo8r78jZ-fqg
            client: QADgNCWRJj0LyRruqzYbBg
            uid: test@test.com
    
    + Attributes
      + user (User Facebook Response, required)

## Log out [/api/v1/users/sign_out]

### Log out [DELETE]

+ Request (application/json)
    + Headers

            access-token: sO2bm_Bpdyoo8r78jZ-fqg
            client: QADgNCWRJj0LyRruqzYbBg
            expiry: 1489009792
            uid: test@test.com

+ Response 200 (application/json)

+ Response 404
    + Body

            {
              "error": "User was not found or was not logged in."
            }


## Reset password [/api/v1/users/password]

https://github.com/lynndylanhurley/devise_token_auth/wiki/Reset-Password-Flow

### Reset password [POST]

Use this route to send a password reset confirmation email

+ Request (application/json)
    + Body

            {
              "email": "test@test.com",
              "redirect_url": "http://www.example.com"
            }

+ Response 200 (application/json)
    + Body

            {
              "success": true,
              "message": "An email has been sent to 'example@mail.com' containing instructions for resetting your password."
            }

## Edit reset password [/api/v1/users/password/edit]

### Edit reset password [GET]

This route is the destination URL for password reset confirmation

+ Request (application/json)
    + Parameters
        + reset_password_token (string, required)
        + redirect_url (string)

+ Response 200 (application/json)
    + Headers

            access-token: sO2bm_Bpdyoo8r78jZ-fqg
            client: QADgNCWRJj0LyRruqzYbBg
            expiry: 1489009792
            uid: test@test.com

### Reset password [PUT]

Use this route to change user's passwords

+ Request (application/json)
    + Headers

            access-token: -abG_2b-LZMm_mJxz6dlGg
            client: SOn5zDcJF_pkmGvTF_5eMQ
            uid: test@test.com

    + Body

            {
              "password": "12345678",
              "password_confirmation": "12345678"
            }

+ Response 200 (application/json)
    + Headers

            access-token: sO2bm_Bpdyoo8r78jZ-fqg
            client: QADgNCWRJj0LyRruqzYbBg
            expiry: 1489009792
            uid: test@test.com

    + Attributes
      + user (User Response, required)

## Topics Collection [/api/v1/topics]

### Get Topics [GET]

+ Request (application/json)
    + Headers

            access-token: 0JfjvKLv7NR3_d10350u2w
            client: pBx8B5nowYy3L-EXueP6nQ
            uid: test@test.com
            token-type: Bearer

+ Response 200 (application/json)
    + Attributes
      + topics (Topics Collection)


## Spot Collection [/api/v1/spots]

### Create Spot [POST]

+ Request (application/json)
    + Headers

            access-token: Aq0GCbYKWFA0oAbcvRzP9g
            client: 0WPgnm5Ns79vEqh1O81Akg
            uid: test@test.com
            token-type: Bearer
    
    + Attributes
      + spot (Spot, required)

+ Response 200 (application/json)
    + Attributes
        + spot (Spot, required)
        + matches (Min Details Matches Collection)

### Get Spots [GET]

+ Request (application/json)
    + Headers

            access-token: Aq0GCbYKWFA0oAbcvRzP9g
            client: 0WPgnm5Ns79vEqh1O81Akg
            uid: test@test.com
            token-type: Bearer

+ Response 200 (application/json)
    + Attributes
        + spots (Spots Collection)

## Delete spot [/api/v1/spots/{id}]

### Delete spot [DELETE]

+ Request (application/json)
    + Headers

            access-token: sO2bm_Bpdyoo8r78jZ-fqg
            client: QADgNCWRJj0LyRruqzYbBg
            expiry: 1489009792
            uid: test@test.com

+ Response 204 (application/json)

+ Response 404
    + Body

            {
              "error": "Couldn't find the record"
            }

## Match Collection [/api/v1/users/matches]

### Get Matches [GET]

+ Request (application/json)
    + Headers

            access-token: Aq0GCbYKWFA0oAbcvRzP9g
            client: 0WPgnm5Ns79vEqh1O81Akg
            uid: test@test.com
            token-type: Bearer

+ Response 200 (application/json)
    + Attributes
            + matches (Matches Collection)

## Match Conversations [/api/v1/conversations]

### Create Conversation [POST]

+ Request (application/json)
    + Headers

            access-token: Aq0GCbYKWFA0oAbcvRzP9g
            client: 0WPgnm5Ns79vEqh1O81Akg
            uid: test@test.com
            token-type: Bearer
    
    + Body

            {
                "conversation":
                {
                    "match_id": 1
                }
            }

+ Response 200 (application/json)
    + Attributes
            + conversation (Conversation, required)

### Get Conversations [GET]

+ Request (application/json)
    + Headers

            access-token: Aq0GCbYKWFA0oAbcvRzP9g
            client: 0WPgnm5Ns79vEqh1O81Akg
            uid: test@test.com
            token-type: Bearer

+ Response 200 (application/json)
    + Attributes
                + conversations (Conversations Collection)

### Messages Collection [/api/v1/conversations/{id}/messages]

## Get Messages [GET]

+ Request (application/json)
    + Headers

            access-token: Aq0GCbYKWFA0oAbcvRzP9g
            client: 0WPgnm5Ns79vEqh1O81Akg
            uid: test@test.com
            token-type: Bearer

+ Response 200 (application/json)
    + Attributes
                + messages (Messages Collection)

# Data Structures

## User Edition (object)
+ email: test@test.com (string)
+ name: Test (string)
+ gender: female (string)
+ password: password (string)
+ password_confirmation: password (string)

## User Update Edition (object)
+ email: test@test.com (string)
+ name: Test (string)
+ gender: female (string)
+ avatar (Avatar)
+ push_token (array[string])

## User Response (object)
+ id: 1 (number)
+ provider: email (string)
+ uid: test@test.com (string)
+ name: test (string)
+ email: test@test.com (string)
+ gender: male (string)
+ created_at: 2018-11-02T17:54:14.451Z (string)
+ updated_at: 2018-11-02T17:54:14.576Z (string)
+ avatar (Avatar)
+ push_token (array[string])

## User Facebook Response (object)
+ id: 1 (number)
+ provider: facebook (string)
+ uid: 987654321 (string)
+ name: test (string)
+ email: test@test.com (string)

## Avatar (object)
+ url: http://example.com (string)
+ thumb
    + url: http://example.com (string)
+ normal
    + url: http://example.com (string)

## Topics Collection (object)
+ topics (array[Topic], required)

## Topic (object)
+ id: 1 (number)
+ label: Football (string)

## Spots Collection (object)
+ spots (array[Spot], required)

## Spot (object)
+ id: 1 (number)
+ title: spot (string)
+ latitude: 34.907604 (number)
+ longitude: 56.201101 (number)
+ radius: 500 (number)
+ topic_id: 1 (number)

## Matches Collection (object)
+ matches (array[Match], required)

## Match (object)
+ id: 1 (number)
+ first_user_id: 1 (number)
+ second_user_id: 2 (number)

## Min Details Matches Collection (object)
+ matches (array[Min Details Match], required)

## Min Details Match (object)
+ id: 1 (number)
+ matched_user_id: 1 (number)

## Conversations Collection (object)
+ conversations (array[Conversation], required)

## Conversation (object)
+ id: 1 (number)
+ match_id: 1 (number)
+ unread_messages: 0 (number)
+ last_message: null (string)

## Messages Collection (object)
+ messages (array[Message], required)

## Message (object)
+ id: 1 (number)
+ content: Message (string)
+ created_at: 2018-09-25T18:28:25.834Z (string)
+ sender_id: 1 (number)
